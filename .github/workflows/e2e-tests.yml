name: E2E Tests

on:
  workflow_call:
    inputs:
      BUILD_ENV:
        required: true
        type: string
      PROJECT:
        required: true
        type: string
      PATH:
        required: true
        type: string
      PORT:
        required: true
        type: string
      START_PROJECT_COMMAND:
        required: true
        type: string
      RUN_TEST_COMMAND:
        required: true
        type: string

# Serial executions on self-hosted (one at a time)
concurrency:
  group: e2e

jobs:
  tests-e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: "yarn"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-setup-${{ inputs.BUILD_ENV }}-${{ hashFiles('./yarn.lock') }}

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: "**/packages/*/dist"
          key: ${{ runner.os }}-dependencies-${{ inputs.BUILD_ENV }}-${{ github.sha }}

      - name: Cache ${{ inputs.PROJECT }}
        id: cache-project
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/packages/app/${{ inputs.PROJECT }}/${{ inputs.PATH }}
          key: ${{ runner.os }}-project-${{ inputs.PROJECT }}-${{ inputs.BUILD_ENV }}-${{ github.sha }}

      - name: Cache Cypress
        uses: actions/cache@v4
        with:
          path: "~/.cache/Cypress"
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('./yarn.lock') }}
        
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Start Firebase Emulator
        run: |
          make db &
          sleep 5

      - name: e2e - ${{ inputs.PROJECT }}
        uses: cypress-io/github-action@v6
        env:
          DEBUG: '@cypress/github-action'
          CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
        with:
          install: false
          start: |
            make run ${{ inputs.PROJECT }} ${{ inputs.START_PROJECT_COMMAND }}
          wait-on: http://localhost:${{ inputs.PORT }}, http://localhost:8080
          config-file: packages/e2e/cypress.config.ts
          command: make run e2e ${{ inputs.RUN_TEST_COMMAND }}